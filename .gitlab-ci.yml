variables:
  DOCKER_CONFIG: "$CI_PROJECT_DIR/.docker"


stages:
  - build
  - validate
  # - plan
  - apply
  # - provision
  - destroy

build-docker-image:
  stage: build
  image: docker:24.0.5
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "" # Vide pour l'instant pour établie la connection entre les conteneurs
  before_script:
    - mkdir -p $DOCKER_CONFIG  # Ensure the Docker config directory exists
    - echo "$PULL_PAT_TEST" | docker login -u "$CI_REGISTRY_USER" $CI_REGISTRY --password-stdin # Connection au registry gitlab
  script:
    - echo "Yé boiiiiii"
    # - docker build -t $CI_REGISTRY/ara1504621/terraform-test/app_temoin:v0.1 ./app
    # - docker push $CI_REGISTRY/ara1504621/terraform-test/app_temoin:v0.1
  artifacts:
    paths:
      - .docker/config.json
  tags:
    - build_job_docker
  # when: manual

validate:
  stage: validate
  image:
    name: hashicorp/terraform:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  before_script:
    # - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
    # - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - rm -rf .terraform
    - terraform --version
    - terraform init
  script:
    - terraform fmt -recursive
    - terraform validate
  artifacts:
    paths:
      - aws.cfg
  when: manual
        # on_success

# plan:
#   stage: plan
#   image:
#     name: hashicorp/terraform:latest
#     entrypoint:
#       - '/usr/bin/env'
#       - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
#   before_script:
#     - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
#     - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
#     - rm -rf .terraform
#     - terraform --version
#     - terraform init
#   script:
#     - terraform plan
#   dependencies:
#     - validate

apply:
  stage: apply
  image:
    name: hashicorp/terraform:latest
    entrypoint:
      - '/usr/bin/env'
      - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
  before_script:
    # - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
    # - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - rm -rf .terraform
    - terraform --version
    - terraform init
  script:
    - terraform apply --auto-approve
  dependencies:
    # - plan
    - validate
  when: manual

destroy:
  stage: destroy
  before_script:
    - rm -rf .terraform
    - terraform --version
    - terraform init
  script:
    - terraform destroy --auto-approve
  needs:
    - apply
  when: manual