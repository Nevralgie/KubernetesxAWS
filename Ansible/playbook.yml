- name: Hydrate MySQL Database
  hosts: local
  become: yes
  vars:
  #   db_host: "{{ lookup('env', 'DB_ENDPOINT') }}"   # Replace with your RDS endpoint
  #   db_name: "{{ lookup('env', 'DB_NAME') }}"   # Replace with your database name
  #   db_user: "{{ lookup('env', 'DB_USER') }}"   # Replace with your database username
  #   db_password: "{{ lookup('env', 'DB_PASSWORD') }}"  # Replace with your database password
    db_port: "{{ default(3306) }}"  # Default MySQL port                                

  tasks:
    - name: Load environment variables from .env file
      shell: cat {{ env_file }}
      register: env_file_content

    - name: Parse the environment variables
      set_fact:
        env_vars: "{{ env_file_content.stdout | from_yaml }}"

    - name: Set environment variables
      set_fact:
        DB_ENDPOINT: "{{ env_vars.DB_ENDPOINT }}"
        DB_USER: "{{ env_vars.DB_USER }}"
        DB_PASSWORD: "{{ env_vars.DB_PASSWORD }}"
        DB_NAME: "{{ env_vars.DB_NAME }}"

    - name: Ensure the database exists
      mysql_db:
        name: "{{ DB_NAME }}"
        state: present
        login_user: "{{ DB_USER }}"
        login_password: "{{ DB_PASSWORD }}"
        login_host: "{{ DB_ENDPOINT }}"
        login_port: "{{ db_port }}"

    - name: Create a table and insert initial data
      mysql_query:
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        login_host: "{{ db_host }}"
        login_port: "{{ db_port }}"
        db: "{{ db_name }}"
        query: |
          CREATE DATABASE devdb;
              USE devdb;
              CREATE TABLE IF NOT EXISTS stock_data (Date DATE, Open FLOAT, High FLOAT, Low FLOAT, Close FLOAT, AdjClose FLOAT, Volume INT, StockName VARCHAR(10), PRIMARY KEY (Date, StockName));
              CREATE USER 'workshop_reader'@'%' IDENTIFIED BY '@Cdevops_69100'; GRANT SELECT ON stock_data TO 'workshop_reader'@'%';FLUSH PRIVILEGES;
              
              -- Coherent sample data for MSFT
              INSERT INTO stock_data (Date, Open, High, Low, Close, AdjClose, Volume, StockName) 
              VALUES 
                ('2023-01-01', 120.00, 125.00, 119.00, 123.00, 123.00, 1000000, 'MSFT'),
                ('2023-01-02', 123.00, 128.00, 122.00, 126.00, 126.00, 1100000, 'MSFT'),
                ('2023-01-03', 126.00, 130.00, 125.00, 127.00, 127.00, 1200000, 'MSFT'),
                ('2023-01-04', 127.00, 129.00, 124.00, 125.00, 125.00, 1300000, 'MSFT'),
                ('2023-01-05', 125.00, 127.00, 123.00, 124.00, 124.00, 1400000, 'MSFT'),
                ('2023-01-06', 124.00, 126.00, 121.00, 123.00, 123.00, 1500000, 'MSFT'),
                ('2023-01-07', 123.00, 128.00, 120.00, 122.00, 122.00, 1600000, 'MSFT'),
                ('2023-01-08', 122.00, 125.00, 121.00, 124.00, 124.00, 1700000, 'MSFT'),
                ('2023-01-09', 124.00, 127.00, 123.00, 126.00, 126.00, 1800000, 'MSFT'),
                ('2023-01-10', 126.00, 130.00, 125.00, 128.00, 128.00, 1900000, 'MSFT'),
                ('2023-01-11', 128.00, 133.00, 127.00, 130.00, 130.00, 2000000, 'MSFT'),
                ('2023-01-12', 130.00, 135.00, 129.00, 132.00, 132.00, 2100000, 'MSFT');
              
              -- Coherent sample data for AMZN
              INSERT INTO stock_data (Date, Open, High, Low, Close, AdjClose, Volume, StockName) 
              VALUES 
                ('2023-01-01', 3000.00, 3050.00, 2980.00, 3025.00, 3025.00, 2000000, 'AMZN'),
                ('2023-01-02', 3025.00, 3070.00, 3010.00, 3045.00, 3045.00, 2100000, 'AMZN'),
                ('2023-01-03', 3045.00, 3090.00, 3030.00, 3060.00, 3060.00, 2200000, 'AMZN'),
                ('2023-01-04', 3060.00, 3100.00, 3040.00, 3080.00, 3080.00, 2300000, 'AMZN'),
                ('2023-01-05', 3080.00, 3120.00, 3060.00, 3100.00, 3100.00, 2400000, 'AMZN'),
                ('2023-01-06', 3100.00, 3150.00, 3090.00, 3125.00, 3125.00, 2500000, 'AMZN'),
                ('2023-01-07', 3125.00, 3170.00, 3110.00, 3150.00, 3150.00, 2600000, 'AMZN'),
                ('2023-01-08', 3150.00, 3200.00, 3130.00, 3180.00, 3180.00, 2700000, 'AMZN'),
                ('2023-01-09', 3180.00, 3230.00, 3160.00, 3210.00, 3210.00, 2800000, 'AMZN'),
                ('2023-01-10', 3210.00, 3260.00, 3190.00, 3240.00, 3240.00, 2900000, 'AMZN'),
                ('2023-01-11', 3240.00, 3300.00, 3220.00, 3270.00, 3270.00, 3000000, 'AMZN'),
                ('2023-01-12', 3270.00, 3330.00, 3250.00, 3300.00, 3300.00, 3100000, 'AMZN');